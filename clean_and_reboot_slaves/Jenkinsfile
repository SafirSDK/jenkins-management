@Library('safir_shared_library') _

pipeline {
    parameters {
        booleanParam(name: 'REMOVE_ALL_CONAN_PACKAGES',
                     defaultValue: true,
                     description: 'Remove all conan packages?')

    }
    agent none
    stages {
        stage ("Clean and Reboot"){
            steps {
                parallelRunOnNodes { nodeLabel ->
                    checkout scm
                    script {
                        //run on all slaves
                        utils.runCommand(command: "pip install --user --upgrade psutil")

                        //run on only build slaves
                        if (nodeLabel.contains("-build")) {
                            utils.runCommand(command: 'pip install --user --upgrade "conan<2.0.0"')
                            utils.runCommand(command: "pip install --user --upgrade websockets")
                            utils.runCommand(command: "conan remove --locks")
                            if (params.REMOVE_ALL_CONAN_PACKAGES) {
                                utils.runCommand(command: 'conan remove -f "*"')
                            }
                        }

                        //The checkout gets the whole repo, so we need to provide the path relative the repo root.
                        utils.runPython(command: "clean_and_reboot_slaves/clean_slave.py")

                        //Reboot in 60 seconds
                        if (utils.betterIsUnix()) {
                            utils.runCommand(command: "sudo shutdown -r +1")
                        }
                        else {
                            utils.runCommand(command: "shutdown -r -t 60")
                        }

                        utils.markNodeOffline(nodeLabel, "Rebooting")
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                sleep (180) //Nodes should be rebooting by now
                utils.markAllNodesOnline()
            }
        }
    }
}
